"""
üìÇ –†–µ–∫—É—Ä—Å–∏–≤–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –∑–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º

üõ† –©–æ —Ä–æ–±–∏—Ç—å —Ü–µ–π —Å–∫—Ä–∏–ø—Ç:
- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —É—Å—ñ –≤–∫–ª–∞–¥–µ–Ω—ñ –ø–∞–ø–∫–∏ –≤ –æ–±—Ä–∞–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
- –ö–æ–ø—ñ—é—î –≤—Å—ñ —Ñ–∞–π–ª–∏ –¥–æ –Ω–æ–≤–æ—ó –ø–∞–ø–∫–∏ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: dist)
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–æ–∑–∫–ª–∞–¥–∞—î —Ñ–∞–π–ª–∏ –∑–∞ —Ç–∏–ø–æ–º/—Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º:
  JPG ‚Üí dist/jpg/photo.jpg
  MP3 ‚Üí dist/mp3/music.mp3
  PDF ‚Üí dist/pdf/report.pdf

üñ• –Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:
1. –ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ —Ç–µ—Ä–º—ñ–Ω–∞–ª:

    ‚ñ∂Ô∏è python copy_files.py

2. –í–≤–µ–¥–∏ —à–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏, –∑ —è–∫–æ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ñ–∞–π–ª–∏:
    –ù–∞–ø—Ä–∏–∫–ª–∞–¥: test_folder –∞–±–æ /Users/—ñ–º‚Äô—è/Desktop/–Ω–∞–∑–≤–∞_–ø–∞–ø–∫–∏

3. –í–≤–µ–¥–∏ —à–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ Enter –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—ó dist)

‚úÖ –£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –æ—Ç—Ä–∏–º–∞—î—à:
- –ù–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫ –∑ —Ä–æ–∑—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏
- –í–∏–≤—ñ–¥ —É —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ —É –≤–∏–≥–ª—è–¥—ñ –¥–µ—Ä–µ–≤–∞

üß© –°–∫—Ä–∏–ø—Ç —î —á–∞—Å—Ç–∏–Ω–æ—é –¥–æ–º–∞—à–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ —Ç–µ–º—É ¬´–†–µ–∫—É—Ä—Å—ñ—è¬ª
"""

import shutil
from pathlib import Path
from io import StringIO
import sys

def copy_files_by_extension(src_path: Path, dst_path: Path):
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø—ñ—é—î —Ñ–∞–π–ª–∏ –∑ src_path –¥–æ dst_path, —Å–æ—Ä—Ç—É—î —ó—Ö –∑–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º–∏.
    """
    if src_path.is_dir():
        for item in src_path.iterdir():
            copy_files_by_extension(item, dst_path)
    elif src_path.is_file():
        ext = src_path.suffix.lower().lstrip(".")
        if ext:
            target_dir = dst_path / ext
            target_dir.mkdir(parents=True, exist_ok=True)
            target_file = target_dir / src_path.name
            if not target_file.exists():
                try:
                    shutil.copy2(src_path, target_file)
                except (PermissionError, OSError) as e:
                    print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—ñ {src_path}: {e}")

def print_tree(path: Path, prefix: str = "", output_lines=None):
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤–∏–≤–æ–¥–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫/—Ñ–∞–π–ª—ñ–≤ —É –≤–∏–≥–ª—è–¥—ñ –¥–µ—Ä–µ–≤–∞.
    """
    if output_lines is None:
        output_lines = []

    items = sorted(list(path.iterdir()))
    for index, item in enumerate(items):
        connector = "‚îî‚îÄ‚îÄ " if index == len(items) - 1 else "‚îú‚îÄ‚îÄ "
        output_lines.append(prefix + connector + item.name)
        if item.is_dir():
            extension = "    " if index == len(items) - 1 else "‚îÇ   "
            print_tree(item, prefix + extension, output_lines)
    return output_lines

def print_framed_output(text: str):
    """
    –û–±–≥–æ—Ä—Ç–∞—î —Ç–µ–∫—Å—Ç —É —Ä–∞–º–∫—É –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —á–∏—Ç–∞–Ω–Ω—è.
    """
    lines = text.strip().split("\n")
    width = max(len(line) for line in lines)
    print("‚îå" + "‚îÄ" * (width + 2) + "‚îê")
    for line in lines:
        print(f"‚îÇ {line.ljust(width)} ‚îÇ")
    print("‚îî" + "‚îÄ" * (width + 2) + "‚îò")

def main():
    print("üîÅ –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –∑–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º")
    src_input = input("üìÇ –í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ –≤–∏—Ö—ñ–¥–Ω–æ—ó –ø–∞–ø–∫–∏: ").strip()
    dst_input = input("üìÅ –í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è 'dist'): ").strip()

    src_path = Path(src_input)
    dst_path = Path(dst_input) if dst_input else Path("dist")

    if not src_path.exists() or not src_path.is_dir():
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –≤–∏—Ö—ñ–¥–Ω–∞ –ø–∞–ø–∫–∞ –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ —Ü–µ –Ω–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è.")
        return

    dst_path.mkdir(parents=True, exist_ok=True)
    copy_files_by_extension(src_path, dst_path)

    print("\nüå≤ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó:")
    tree_lines = print_tree(dst_path)
    framed_output = "\n".join(tree_lines)
    print_framed_output(framed_output)

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–æ –ª–æ–≥-—Ñ–∞–π–ª—É
    with open("copy_log.txt", "w", encoding="utf-8") as f:
        f.write(f"üìÅ –î–∂–µ—Ä–µ–ª–æ: {src_path.resolve()}\n")
        f.write(f"üìÅ –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: {dst_path.resolve()}\n\n")
        f.write("üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó:\n")
        f.write(framed_output)

    print("\nüìù –õ–æ–≥ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É copy_log.txt")

if __name__ == "__main__":
    main()